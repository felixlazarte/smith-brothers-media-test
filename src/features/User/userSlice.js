import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import axios from 'axios';

const initialState = {
  form: {
    email: '',
    name: '',
  },
  isLoading: false,
  result: null,
  errors: null
};

export const userSlice = createSlice({
  name: 'user',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    changeValues: (state, action) => {
      state.form = action.payload;
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(validateEmail.pending, (state) => {
        state.isLoading = true;
        state.result = null;
      })
      .addCase(validateEmail.fulfilled, (state, action) => {
        state.isLoading = false;
        state.result = action.payload;
      })
      .addCase(validateEmail.rejected, (state, action) => {
        state.isLoading = false;
        state.errors = action.payload;
        state.result = null;
      })
  }
});

export const validateEmail = createAsyncThunk('get/validateEmail',
  async ({ email }) => {
    const response = await axios.get('https://emailvalidation.abstractapi.com/v1/',{
      params: {
        email,
        api_key: "79e4ad0907cd4a59935a2736765d4541"
      }
    });

    return response.data;
  }
);

// The function below is called a selector and allows us to select a value from
// the state.
export const getUserState = (state) => state.user;

export default userSlice.reducer;
